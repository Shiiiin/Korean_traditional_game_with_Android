@startuml

title __INGAME's Class Diagram__\n

  package com.example.shutda {
    package com.example.shutda.view {
      package com.example.shutda.view.Ingame {
        class EventHandler {
            - msg : Message
            + EventHandler()
            + ExecuteTask()
        }
      }
    }
  }
  

  package com.example.shutda {
    package com.example.shutda.view {
      package com.example.shutda.view.Ingame {
        class GameThread {
            {static} - TAG : String
            - gameStatus : LiveData<Boolean>
            - player2Turn : LiveData<Boolean>
            - player3Turn : LiveData<Boolean>
            + GameThread()
            + interrupt()
            + run()
        }
      }
    }
  }
  

  package com.example.shutda {
    package com.example.shutda.view {
      package com.example.shutda.view.Ingame {
        abstract class TaskQueue {
            {static} ~ messageQueue : Queue<TaskQueue>
            {static} ~ isTurnOn : boolean
            + addTask()
            {abstract} + ExecuteTask()
            {static} + TaskFinishCallback()
            {static} + polling()
        }
      }
    }
  }
  

  package com.example.shutda {
    package com.example.shutda.view {
      package com.example.shutda.view.Ingame {
        class WinnerChecker {
            - playersMap : HashMap<String, Integer>
            + WinnerChecker()
            + setPlayer()
            + setPlayersMap()
            + WinnerClassifier()
            + carculateCards()
        }
      }
    }
  }
  

  package com.example.shutda {
    package com.example.shutda.view {
      package com.example.shutda.view.Ingame {
        class gameViewModel {
            - ShuffledCards : List<Integer>
            - CardsMachine : Queue<Integer>
            - users : MutableLiveData<HashMap<String, User>>
            - statement : MutableLiveData<Boolean>
            - buttonSet : MutableLiveData<Boolean[]>
            - TotalBettingMoney : MutableLiveData<Integer>
            - player1Score : MutableLiveData<Long>
            - player2Score : MutableLiveData<Long>
            - player3Score : MutableLiveData<Long>
            - UserTurn : MutableLiveData<Boolean>
            - player2Turn : MutableLiveData<Boolean>
            - player3Turn : MutableLiveData<Boolean>
            - CallNumber : MutableLiveData<Integer>
            - DieNumber : MutableLiveData<Integer>
            - HalfNumber : MutableLiveData<Integer>
            - FirstTurn : MutableLiveData<Boolean>
            - SecondsCardsPollingTrigger : MutableLiveData<Boolean>
            - Winner : MutableLiveData<String>
            - EnableCheck : MutableLiveData<Boolean>
            - random : Random
            - MaxPlayerBattingScore : int
            - CheckNumber : int
            + getUsers()
            + getIngameStatus()
            + getTotalBettingMoney()
            + getButtonSet()
            + getPlayer1Score()
            + getPlayer2Score()
            + getPlayer3Score()
            + getUserTurn()
            + getPlayer2Turn()
            + getPlayer3Turn()
            + getCallNumber()
            + getDieNumber()
            + getHalfNumber()
            + getFirstTurn()
            + getWinner()
            + getSecondsCardsPollingTrigger()
            + setUsers()
            + setStatus()
            + setCallNumber()
            + setHalfNumber()
            + setFirstTurn()
            + setSecondsCardsPollingTrigger()
            + setWinner()
            + setEnableCheck()
            + execute()
            + finish()
            + initialize()
            + CardShuffling()
            + BaseBettingExecute()
            + HalfButtonExecute()
            + DieButtonExecute()
            + CallButtonExecute()
            + CheckButtonExecute()
            + AiDecisionMakingExecute()
            + AiHalfExecute()
            + AiDieExecute()
            + AiCallExecute()
            + AiCheckExecute()
            + checkWinner()
            + uploadScoreToFirestore()
            + checkEnd()
            + rematchPlayers()
        }
      }
    }
  }
  

  EventHandler -up-|> TaskQueue
  GameThread o-- gameViewModel : inGame
  GameThread o-- MainActivity : mainActivity
  gameViewModel -up-|> ViewModel
  gameViewModel o-- WinnerChecker : winnerChecker


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
